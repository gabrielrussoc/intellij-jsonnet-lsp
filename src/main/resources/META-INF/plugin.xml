<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="true">
    <id>com.databricks.intellijjsonnet</id>
    <name>Jsonnet Language Server</name>
    <vendor>databricks</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
        <backgroundPostStartupActivity implementation="com.databricks.intellijjsonnet.JsonnetLSBackgroundStartupActivity"
                                       id="com.databricks.intellijjsonnet.JsonnetLSBackgroundStartupActivity"/>

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon -->
        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                order="first" />

        <!-- needed for completion -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="Jsonnet"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="LSPAnnotator" language="Jsonnet"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>
        
        <!-- custom settings for configuring Language Server -->
        <applicationService serviceImplementation="com.databricks.intellijjsonnet.settings.JLSSettingsStateComponent"/>
        <applicationConfigurable parentId="tools" instance="com.databricks.intellijjsonnet.settings.JLSSettingsConfigurable"/>

        <!-- custom language stuff and things -->
        <fileType name="Jsonnet File"
                  implementationClass="com.databricks.intellijjsonnet.JsonnetFileType"
                  fieldName="INSTANCE"
                  language="Jsonnet"
                  extensions="jsonnet;libsonnet"
                  patterns="*.jsonnet.TEMPLATE"
        />
        <lang.parserDefinition language="Jsonnet"
                               implementationClass="com.databricks.intellijjsonnet.JsonnetParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Jsonnet"
                                       implementationClass="com.databricks.intellijjsonnet.JsonnetSyntaxHighlighterFactory"/>
        <lang.foldingBuilder language="Jsonnet"
                             implementationClass="com.databricks.intellijjsonnet.JsonnetFoldingBuilder"/>
        <lang.braceMatcher language="Jsonnet" implementationClass="com.databricks.intellijjsonnet.JsonnetBraceMatcher"/>
        <lang.commenter
                language="Jsonnet"
                implementationClass="com.databricks.intellijjsonnet.SimpleCommenter"/>
    </extensions>

    <applicationListeners>
        <!-- required for lsp file sync -->
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>

    <actions>
        <!-- needed for hover -->
        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">
        </action>

        <!-- needed for find references -->
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>

        <!-- needed for reformatting -->
        <!--  overrides="true" is undocumented -->
        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode" use-shortcut-of="ReformatCode"
                text="Reformat Code" overrides="true"/>
        <action class="org.wso2.lsp4intellij.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"
                use-shortcut-of="ShowReformatFileDialog" text="Show Reformat File Dialog" overrides="true"/>
    </actions>
</idea-plugin>
